name: Docker CI with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: docker build -t python-devops-app .

      - name: Test Flask Installation
        run: docker run --rm python-devops-app python -c "import flask; print('Flask OK')"

      - name: Test /status Endpoint
        run: |
          docker run -d -p 5000:5000 --name test_status_app python-devops-app
          while [ "$(docker inspect -f '{{.State.Running}}' test_status_app)" != "true" ]; do
            sleep 1
          done
          timeout=20
          count=0
          until curl -sf http://localhost:5000/status; do
            sleep 1
            count=$((count+1))
            if [ $count -ge $timeout ]; then
              docker logs test_status_app
              docker stop test_status_app
              docker rm test_status_app
              exit 1
            fi
          done
          docker stop test_status_app
          docker rm test_status_app

      - name: Test /metrics Endpoint
        run: |
          docker run -d -p 5001:5000 --name test_metrics_app python-devops-app
          while [ "$(docker inspect -f '{{.State.Running}}' test_metrics_app)" != "true" ]; do
            sleep 1
          done
          timeout=20
          count=0
          until curl -sf http://localhost:5001/metrics; do
            sleep 1
            count=$((count+1))
            if [ $count -ge $timeout ]; then
              docker logs test_metrics_app
              docker stop test_metrics_app
              docker rm test_metrics_app
              exit 1
            fi
          done
          docker stop test_metrics_app
          docker rm test_metrics_app

  sonarcloud:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.14.0.38109-linux.zip
          unzip sonar-scanner-cli-5.14.0.38109-linux.zip
          echo "$PWD/sonar-scanner-5.14.0.38109-linux/bin" >> $GITHUB_PATH

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=flask-app \
            -Dsonar.organization=sabhckr \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=app,run.py,tests \
            -Dsonar.python.version=3.9
